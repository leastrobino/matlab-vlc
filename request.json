<?vlc

  --
  --  request.json   -*- mode: lua -*-
  --
  --  Created by Léa Strobino.
  --  Copyright 2016. All rights reserved.
  --

  local dkjson = require('dkjson')

  local c = _GET['c']
  local v = _GET['v']

  if c then

    -- process command

    if c == 'add' then
      vlc.playlist.add({{path = vlc.strings.make_uri(v)}})
    elseif c == 'enqueue' then
      vlc.playlist.enqueue({{path = vlc.strings.make_uri(v)}})
    elseif c == 'play' then
      vlc.playlist.play()
    elseif c == 'pause' then
      if vlc.playlist.status() == 'playing' then
        vlc.playlist.pause()
      end
    elseif c == 'stop' then
      vlc.playlist.stop()
    elseif c == 'next' then
      vlc.playlist.next()
    elseif c == 'prev' then
      vlc.playlist.prev()
    elseif c == 'clear' then
      vlc.playlist.clear()
    elseif c == 'fullscreen' then
      if vlc.object.vout() then
        vlc.video.fullscreen(v)
      end
    elseif c == 'loop' then
      if vlc.playlist.loop(v) then
        vlc.playlist.repeat_('off')
      end
    elseif c == 'repeat' then
      if vlc.playlist.repeat_(v) then
        vlc.playlist.loop('off')
      end
    elseif c == 'random' then
      vlc.playlist.random(v)
    elseif c == 'seek' then
      common.seek(v)
    end

  else

    -- get status

    local s = {}

    s.version = vlc.misc.version()
    s.status = vlc.playlist.status()
    s.random = vlc.var.get(vlc.object.playlist(),'random')
    s.loop = vlc.var.get(vlc.object.playlist(),'loop')
    s['repeat'] = vlc.var.get(vlc.object.playlist(),'repeat')

    if vlc.object.input() then
      s.current = {}
      s.current.ID = vlc.playlist.current()
      s.current.Length = vlc.var.get(vlc.object.input(),'length')
      s.current.Position = vlc.var.get(vlc.object.input(),'time')
      s.current.Meta = vlc.input.item():metas()
    end

    s.playlist = {}
    s.playlist.Content = {}
    for i, child in ipairs(vlc.playlist.get().children[1].children) do
      local item = {}
      item.ID = child.id
      item.Title = tostring(child.name)
      item.URI = tostring(child.path)
      item.Length = child.duration
      table.insert(s.playlist.Content,item)
      if vlc.object.input() and item.ID == s.current.ID then
        s.playlist.Position = i
      end
    end
    s.playlist.Length = table.getn(s.playlist.Content)

    print(dkjson.encode(s))

  end

?>
